# -*- coding: utf-8 -*-
"""UnoCode.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1b7u5mtBlUkpgzf4eHgXanRi1FDz8Rbkq
"""

pip install openai googletrans==4.0.0-rc1 python-dotenv

# Filename: multilingual_triage_chatbot.py

import openai
from googletrans import Translator
import os
from dotenv import load_dotenv

# Load your OpenAI API key from a .env file
load_dotenv()
openai.api_key = "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"

# Initialize translator
translator = Translator()

# Function to translate user input to English
def translate_input_to_english(user_input):
    translation = translator.translate(user_input, dest='en')
    return translation.text

# Function to ask GPT-3.5 to triage the symptom
def get_triage_classification(symptom_text):
    prompt = f"""
You are a medical triage assistant. Based on the following patient complaint, classify the urgency as:
- Emergency
- Urgent
- Non-Urgent

Explain the reason for your classification.

Patient complaint: "{symptom_text}"

Respond in the following format:
Triage Level: <Emergency/Urgent/Non-Urgent>
Reason: <Short Explanation>
"""
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.3,
        max_tokens=200
    )

    return response['choices'][0]['message']['content']

# Main chatbot function
def run_chatbot():
    print("Welcome to MediBridge AI Chatbot (Multilingual Triage)")
    user_input = input("Describe your symptom in any language (Malay, Tamil, Mandarin, English... etc): ")

    # Step 1: Translate to English
    translated_text = translate_input_to_english(user_input)
    print(f"\nüîÑ Translated to English: {translated_text}")

    # Step 2: Send to GPT for triage
    triage_response = get_triage_classification(translated_text)
    print(f"\nü§ñ GPT-3.5 Triage Result:\n{triage_response}")

# Run chatbot
if __name__ == "__main__":
    run_chatbot()

!pip install google-cloud-translate openai tensorflow numpy

from google.cloud import translate_v2 as translate
import os

# Upload your Google Cloud credentials JSON file first
from google.colab import files
files.upload()  # Select your JSON key file

# Set environment variable
os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = "public healthcare raw data.json"  # Replace with your filename

# Translate function
def translate_text(text, target_language="en"):
    client = translate.Client()
    result = client.translate(text, target_language=target_language)
    return result['translatedText']

# Example: Tamil ‚Üí English
tamil_text = "‡Æé‡Æ©‡Æï‡Øç‡Æï‡ØÅ ‡ÆÆ‡Ææ‡Æ∞‡Øç‡Æ™‡ØÅ ‡Æµ‡Æ≤‡Æø ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ"  # "I have chest pain"
translated = translate_text(tamil_text)
print(f"Translated: {translated}")